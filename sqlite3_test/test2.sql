-- SQLite

-- CREATE TABLE COMPANY(
-- ID REAL NOT NULL,
-- NAME TEXT   NOT NULL,
-- AGE REAL NOT NULL,
-- ADDRESS TEXT,
-- SALARY REAL );

-- CREATE TABLE DEPARTMENT(
-- ID REAL NOT NULL,
-- DEPT CHAR(50) NOT NULL,
-- EMP_ID REAL NOT NULL );

-- DROP TABLE DEPARTMENT;

-- ALTER TABLE COMPANY RENAME TO OLD_COMPANY;
-- ALTER TABLE OLD_COMPANY ADD COLUMN SEX TEXT;

-- INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS, SALARY) VALUES (1, 'Paul',32,'California', 20000);
-- INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS, SALARY) VALUES (2, 'Allen', 25, 'Texas', 15000);
-- INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS, SALARY) VALUES (3, 'Teddy', 23, 'Norway', 20000);
-- INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS, SALARY) VALUES (4, 'Mark', 25, 'Rich-Mond', 65000);
-- INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS, SALARY) VALUES (5, 'David', 27, 'Texas', 85000);
-- INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS, SALARY) VALUES (6, 'Kim', 22, 'South-Hall', 45000);
-- INSERT INTO COMPANY VALUES (6, 'James', 24, 'Houston', 10000);
-- INSERT INTO COMPANY VALUES (7, 'James', 24, 'Houston', 10000);

SELECT * FROM COMPANY;
SELECT ID, NAME, SALARY FROM COMPANY;
SELECT tbl_name FROM sqlite_master;
SELECT sql FROM sqlite_master;

INSERT INTO OLD_COMPANY (ID,NAME,AGE,ADDRESS,SALARY)
SELECT ID, NAME,AGE,ADDRESS,SALARY FROM COMPANY ;

DELETE FROM OLD_COMPANY WHERE ID=7;
UPDATE OLD_COMPANY SET ADDRESS='Texas' WHERE ID=6;
UPDATE OLD_COMPANY SET ADDRESS='Seoul',SALARY=20000;

DELETE FROM OLD_COMPANY;

--where문 연습
SELECT NAME FROM COMPANY WHERE NAME IS NOT NULL;
SELECT NAME FROM COMPANY WHERE NAME LIKE '%d%' ;
SELECT NAME FROM COMPANY WHERE NAME LIKE '__vid' ;
SELECT*FROM COMPANY WHERE AGE NOT IN (20,32);
SELECT*FROM COMPANY WHERE AGE BETWEEN 26 AND 32;
SELECT*FROM COMPANY WHERE AGE >=27 AND AGE <=30 ;

SELECT NAME, SUM(SALARY) FROM COMPANY GROUP BY name;
SELECT NAME, SUM(SALARY) AS TOTAL FROM COMPANY GROUP BY NAME;
SELECT COUNT(*), COUNT(AGE) FROM COMPANY WHERE AGE >20

SELECT NAME, AGE, 'YES' AS yesorno FROM COMPANY;


--salary 값이 안겹치는 값들 출력
SELECT*FROM COMPANY
GROUP BY SALARY HAVING count(SALARY)<2;

--salary 값이 겹치는 값들 출력
SELECT*FROM COMPANY
GROUP BY SALARY HAVING count(SALARY)>=2;
--address 값이 겹치는 값 출력 (겹치는 것들 중 하나만 대표로 출력함)
SELECT*FROM COMPANY
GROUP BY ADDRESS HAVING count(ADDRESS)>=2;

--address가 중복되는 값들의 salary 합이 45000이상인 값 출력
--(address를 기준으로 대표 1개만 출력됨)
SELECT*FROM COMPANY
GROUP BY ADDRESS HAVING sum(SALARY)>45000;

SELECT SALARY FROM COMPANY;
--DISTINCT는 중복된 값을 제외한 칼럼을 보여줌
SELECT DISTINCT SALARY FROM COMPANY;



CREATE TABLE DEPARTMENT(
ID      INT PRIMARY KEY NOT NULL,
DEPT    CHAR(50) NOT NULL,
EMP_ID INT NOT NULL  );

INSERT INTO DEPARTMENT (ID,DEPT,EMP_ID) VALUES (1, 'IT Billing', 1);
INSERT INTO DEPARTMENT (ID,DEPT,EMP_ID) VALUES (2, 'Engineering', 2);
INSERT INTO DEPARTMENT (ID,DEPT,EMP_ID) VALUES (3, 'Finance', 7);
INSERT INTO DEPARTMENT (ID,DEPT,EMP_ID) VALUES (4, 'IT Billing', 1);
INSERT INTO DEPARTMENT (ID,DEPT,EMP_ID) VALUES (5, 'Finance', 7);
INSERT INTO COMPANY VALUES (10, 'Smith', 25,'Texas', 35000.0);

--
SELECT EMP_ID, NAME, DEPT FROM COMPANY
INNER JOIN DEPARTMENT
ON COMPANY.ID = DEPARTMENT.EMP_ID;
--AND COMPANY.NAME = 'Paul';
SELECT*FROM COMPANY;
SELECT*FROM DEPARTMENT;

